// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.8 clang-703.0.31)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSURL;
@class Resource;
@class NSCoder;


/// A ResourceCollection represents a collection of resources.
SWIFT_CLASS("_TtC5Spine18ResourceCollection")
@interface ResourceCollection : NSObject <NSCoding>

/// Whether the resources for this collection are loaded
@property (nonatomic) BOOL isLoaded;

/// The URL of the current page in this collection.
@property (nonatomic, strong) NSURL * _Nullable resourcesURL;

/// The URL of the next page in this collection.
@property (nonatomic, strong) NSURL * _Nullable nextURL;

/// The URL of the previous page in this collection.
@property (nonatomic, strong) NSURL * _Nullable previousURL;

/// The loaded resources
@property (nonatomic, readonly, copy) NSArray<Resource *> * _Nonnull resources;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithResources:(NSArray<Resource *> * _Nonnull)resources resourcesURL:(NSURL * _Nullable)resourcesURL OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (Resource * _Nonnull)objectAtIndexedSubscript:(NSInteger)index;

/// Returns how many resources are loaded.
@property (nonatomic, readonly) NSInteger count;

/// Returns a resource identified by the given type and id, or nil if no resource was found.
- (Resource * _Nullable)resourceWithType:(NSString * _Nonnull)type id:(NSString * _Nonnull)id;

/// Append resource to the collection.
- (void)appendResource:(Resource * _Nonnull)resource;

/// Append resources to the collection.
- (void)appendResources:(NSArray<Resource *> * _Nonnull)resources;

/// Remove resource from the collection.
- (void)removeResource:(Resource * _Nonnull)resource;

/// Remove resources from the collection.
- (void)removeResources:(NSArray<Resource *> * _Nonnull)resources;
@end



/// LinkedResourceCollection represents a collection of resources that is linked from another resource. On top of ResourceCollection it offers mutability, linkage and a self URL properties.
///
/// A <code>LinkedResourceCollection
/// </code> keeps track of resources that are linked and unlinked from the collection.
/// This allows Spine to make partial updates to the collection when it the parent resource is persisted.
SWIFT_CLASS("_TtC5Spine24LinkedResourceCollection")
@interface LinkedResourceCollection : ResourceCollection

/// The URL of the link object of this collection.
@property (nonatomic, strong) NSURL * _Nullable linkURL;

/// Resources added to this linked collection, but not yet persisted.
@property (nonatomic, readonly, copy) NSArray<Resource *> * _Nonnull addedResources;

/// Resources removed from this linked collection, but not yet persisted.
@property (nonatomic, readonly, copy) NSArray<Resource *> * _Nonnull removedResources;
- (nonnull instancetype)initWithResourcesURL:(NSURL * _Nullable)resourcesURL linkURL:(NSURL * _Nullable)linkURL homogenousType:(NSString * _Nonnull)homogenousType IDs:(NSArray<NSString *> * _Nonnull)IDs;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;

/// Link resource to the parent resource by appending it to the collection. This marks the resource as newly linked. The relationship will be persisted when the parent resource is saved.
- (void)linkResource:(Resource * _Nonnull)resource;

/// Unlink resource from the parent resource by removing it from the collection. This marks the resource as unlinked. The relationship will be persisted when the parent resource is saved.
- (void)unlinkResource:(Resource * _Nonnull)resource;

/// Link resources to the parent resource by appending them to the collection. This marks the resources as newly linked. The relationship will be persisted when the parent resource is saved.
- (void)linkResources:(NSArray<Resource *> * _Nonnull)resources;

/// Unlink resources from the parent resource by removing then from the collection. This marks the resources as unlinked. The relationship will be persisted when the parent resource is saved.
- (void)unlinkResources:(NSArray<Resource *> * _Nonnull)resource;

/// Append resource to the collection as if it is already linked. If it was previously linked or unlinked, this status will be removed.
- (void)appendResource:(Resource * _Nonnull)resource;

/// Append resources to the collection as if they are already linked. If a resource was previously linked or unlinked, this status will be removed.
- (void)appendResources:(NSArray<Resource *> * _Nonnull)resources;
@end



/// A base recource class that provides some defaults for resources. You can create custom resource classes by subclassing from Resource.
SWIFT_CLASS("_TtC5Spine8Resource")
@interface Resource : NSObject <NSCoding>

/// The resource type in plural form.
+ (NSString * _Nonnull)resourceType;

/// The ID of this resource.
@property (nonatomic, copy) NSString * _Nullable id;

/// The canonical URL of the resource.
@property (nonatomic, strong) NSURL * _Nullable URL;

/// Whether the fields of the resource are loaded.
@property (nonatomic) BOOL isLoaded;

/// The metadata for this resource.
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable meta;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;

/// Returns the value for the field named field.
- (id _Nullable)valueForField:(NSString * _Nonnull)field;

/// Sets the value for the field named field to value.
- (void)setValue:(id _Nullable)value forField:(NSString * _Nonnull)field;

/// Set the values for all fields to nil and sets isLoaded to false.
- (void)unload;
@end


@interface Resource (SWIFT_EXTENSION(Spine))
@end


@interface Resource (SWIFT_EXTENSION(Spine))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
@end



@interface ResourceCollection (SWIFT_EXTENSION(Spine))
@end

#pragma clang diagnostic pop
